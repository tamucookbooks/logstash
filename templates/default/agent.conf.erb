input {
  <% @logfiles.each do |file,prop| -%>
  file {
    path => ["<%=file-%>"]
    type => "<%=prop['type']-%>"
    discover_interval => <%=@loginterval%>
    <% if prop.key?("tag") -%>
    tags => "<%=prop['tag']-%>"
    <% end -%>
    <% if prop.key?("input_extra") -%>
    <% prop['input_extra'].each do |key,value| -%>
    <%=key-%> => <%=value-%>
    <% end -%>
    <% end -%>
    <% if prop['type'] == 'play' -%>
    codec => multiline {
      # pattern => "^[\s]*at.+"
      pattern => ".*~.*"
      negate => true
      what => "previous"
    }
    <% end -%>
  }
  <% end -%>
}

filter {
  if [type] == "web" {
    grok {
      match => [ "message", "%{COMBINEDAPACHELOG}" ]
    }
  }
  if [type] == "nginxerror" {
    grok {
      match => [ "message", "%{GREEDYDATA:logdata}" ]
    }
  }
  if [type] == "syslog" {
    grok {
      match => [ "message", "%{SYSLOGBASE} %{GREEDYDATA:logdata}" ]
    }
  }
  if [type] == "shibboleth" {
    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:logdata}" ]
    }
  }
  if [type] == "play" {
    grok {
      # match => [ "message","%{TIME:time} %{WORD:level} %{DATA:data}" ]
      match => [ "message","(?m)%{SYSLOGTIMESTAMP:timestamp} %{GREEDYDATA:logdata}" ]
      add_tag => [ "play" ]
      add_field => [ "program", "play" ]
    }
  }
  <% @logfiles.each do |file,prop| -%>
  <% if prop.key?('tag') && prop.key?('filters') -%>
  <% prop['filters'].each do |name,value| -%>
  if "<%=prop['tag']-%>" in [tags] {
    <%=name-%> {
      <% value.each do |prop, val| -%>
      <%=prop-%> => <%=val-%>
      <% end -%>
    }
  }
  <% end -%>
  <% end -%>
  <% end -%>
  if [program] == "dhclient" {
    drop { }
  }
  if [program] == "dnsmasq-dhcp" {
    drop { }
  }
}

output {
  redis { 
    host => "<%=@logserver-%>" 
    data_type => "list" 
    key => "logstash" 
  }
}
